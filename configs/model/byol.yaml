target: awesome_ssl.models.byol.BYOL 
kwargs: 
  encoder_params: 
    target: awesome_ssl.models.trunk_models.resnets.resnet50
  projector_params: 
    target: awesome_ssl.models.projection_heads.MLP.MLP
    kwargs: 
      input_dim: 2048
      hidden_dim: 4096
      output_dim: 256
  predictor_params: 
    target: awesome_ssl.models.projection_heads.MLP.MLP
    kwargs: 
      input_dim: 256
      hidden_dim: 4096
      output_dim: 256
  tau: 4.0e-3
  accumulate_n_batch: 1
  optimizer_params: 
    target: torch.optim.Adam
    kwargs: 
      lr: 3.0e-4
  eval_interval: 10
  linear_evaluate_config: 
    target: torch.nn.Linear
    kwargs: 
      in_features: 256  # in features
      out_features: 10 # out features
  transform_1: 
    _convert_: all
    _target_: torchvision.transforms.Compose
    transforms: 
    - _target_: torchvision.transforms.RandomApply
      transforms: 
      - _target_: torchvision.transforms.ColorJitter
        brightness: 0.4
        contrast: 0.4
        saturation: 0.2
        hue: 0.1
      p: 0.8
    - _target_: torchvision.transforms.RandomGrayscale
      p: 0.2
    - _target_: torchvision.transforms.RandomHorizontalFlip
    - _target_: torchvision.transforms.RandomApply
      transforms: 
      - _target_: torchvision.transforms.GaussianBlur
        kernel_size: [3, 3] 
        sigma: [1.0, 2.0]
      p: 1.0
    - _target_: torchvision.transforms.Normalize
      mean: [0.485, 0.456, 0.406]
      std: [0.229, 0.224, 0.225]
    - _target_: torchvision.transforms.RandomSolarize
      threshold: 0.5
      p: 0.2
  transform_2: 
    _convert_: all
    _target_: torchvision.transforms.Compose
    transforms: 
    - _target_: torchvision.transforms.RandomApply
      transforms: 
      - _target_: torchvision.transforms.ColorJitter
        brightness: 0.4
        contrast: 0.4
        saturation: 0.2
        hue: 0.1
      p: 0.8
    - _target_: torchvision.transforms.RandomGrayscale
      p: 0.2
    - _target_: torchvision.transforms.RandomHorizontalFlip
    - _target_: torchvision.transforms.RandomApply
      transforms: 
      - _target_: torchvision.transforms.GaussianBlur
        kernel_size: [3, 3] 
        sigma: [1.0, 2.0]
      p: 0.1
    - _target_: torchvision.transforms.Normalize
      mean: [0.485, 0.456, 0.406]
      std: [0.229, 0.224, 0.225]


